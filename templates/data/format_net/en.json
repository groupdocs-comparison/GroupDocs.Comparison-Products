{
  "common": {
    "head": {
      "title": ".NET {{FileFormatUp}} Comparison API - compare documents using C# .NET",
      "description": "{{ProdFullName}} offers an API to obtain comprehensive document comparison reports in a variety of applications, including C#, ASP.NET, VB.NET, and .NET Core."
    },
    "header": {
      "title": "Compare {{FileFormatUp}} files in .NET solutions",
      "description": ".NET document comparison API for retrieving and displaying differences in {{FileFormatUp}} files in C#, ASP.NET, VB.NET, and .NET Core Applications. Effortlessly obtain detailed reports for a seamless experience.",
      "subtitle": "Document comparison solution",
      "action_title": "Free {{PackageStoreName}} download"
    },
    "about": {
      "title": "Discover {{ProdFullName}} API advantages",
      "content": "{{ProdFullName}} is a native .NET API designed for comparing multiple images and documents of the same format. It aids in detecting differences within paragraphs, words, characters, shapes, and even the text styles of the compared documents. With the ability to merge these changes and export to a final document, it supports comparison and merging of PDFs, Word documents, Excel spreadsheets, PowerPoint presentations, Visio diagrams, Outlook emails, HTML, drawings, and various image file formatsâ€”all without the need for any external libraries."
    },
    "steps": {
      "title": "How to compare multiple {{FileFormatUp}} files using {{ProgLang}}",
      "content": {
        "title": "It is possible to use [{{ProdShortName}}]({{ProductUrl}}) for getting report about differences in many {{FileFormatUp}} files.",
        "step_1": "Install {{ProdFullName}} from [{{PackageStoreName}}]({{PackageUrl}}) using your favorite package manager",
        "step_2": "Provide an instance of Comparer class with full path to initial {{FileFormatUp}} file",
        "step_3": "Append at least one other {{FileFormatUp}} to Comparer",
        "step_4": "Get a final report with precisely described differences"
      },
      "code": {
        "comments": {
          "comment_1": "Compare multiple documents from local disk",
          "comment_2": "Instantiate Comparer providing a first file",
          "comment_3": "Add other files",
          "comment_4": "Get result file with the specified name"
        }
      }
    },
    "formats": {
      "title": "Compare popular file formats using {{ProgLang}}",
      "description": ".NET API for document formats comparison. Stay well-informed about changes at your documents processing them without extra efforts."
    }
  },
  "pdf": {
    "head": {
      "title": "Compare PDFs using the Comparison .NET API and C#",
      "description": "The {{ProdShortName}} .NET API generates detailed PDF documents comparison reports in various types of applications, including C#, ASP.NET, VB.NET, and .NET Core"
    },
    "header": {
      "title": "Comparing PDF documents in C# .NET applications",
      "description": ".NET document comparison API for identifying and displaying differences in PDFs within applications based on C#, ASP.NET, VB.NET, and .NET Core. Effortlessly obtain detailed reports for a seamless experience."
    },
    "about": {
      "title": "Uncover {{ProdFullName}} API features",
      "content": "Get detailed reports about differences at PDF documents at your .NET applications. Merge distinct PDFs to a new one with the same format. Use {{ProdFullName}} APIs by adding a couple lines of code. Process PDFs and other formats without third-party software."
    },
    "steps": {
      "title": "How to compare PDFs using C#",
      "content": {
        "title": "Get report about differences in many PDF files using [{{ProdShortName}}]({{ProductUrl}})",
        "step_1": "Get {{ProdFullName}} from [{{PackageStoreName}}]({{PackageUrl}}) and install it",
        "step_2": "Create brand new Comparer instance with path to PDF file",
        "step_3": "Add other PDF to comparison",
        "step_4": "Result contains a report about distinctions at both PDFs"
      },
      "code": {
        "comments": {
          "comment_1": "Composing PDFs distinctions report",
          "comment_2": "Instantiate Comparer with path to a first file",
          "comment_3": "Append one or more PDFs to comparison",
          "comment_4": "Result report to be analyzed"
        }
      }
    },
    "formats": {
      "title": "Compare PDFs using C# and get full report",
      "description": ".NET API for PDF documents comparison. Stay well-informed about any changes at your documents easily."
    }
  },
  "docx": {
    "head": {
      "title": "Compare MS Word documents by {{ProdFullName}}",
      "description": "MS Word documents particularly DOCX could be compared by {{ProdFullName}} API. As result you obtain detailed report with highlighted alterations between DOCX documents. Use our API along with applications based on C#, ASP.NET, VB.NET, or .NET Core."
    },
    "header": {
      "title": "MS Word DOCX comparison with C# .NET applications",
      "description": "{{EnvName}} API designed for documents comparison finds and reports any differences in MS Word files. Build applications based on C#, ASP.NET, VB.NET, or .NET Core to get advantages. Obtain detailed reports adding a few code-lines."
    },
    "about": {
      "title": "Examine {{ProdFullName}} API features",
      "content": "Reveal alterations in your DOCX documents with convenient report in your {{EnvName}} projects. Moreover, get information about styles, shapes and other content and merge DOCX files to a new one. Advantages of {{ProdFullName}} APIs could be brought to your projects by only a couple lines of code. Use our software without third-party developers."
    },
    "steps": {
      "title": "MS Word DOCX comparison reports via .NET and C#",
      "content": {
        "title": "Compose distinctions report for DOCX files using [{{ProdShortName}}]({{ProductUrl}})",
        "step_1": "Download {{ProdFullName}} package from [{{PackageStoreName}}]({{PackageUrl}}) and install it",
        "step_2": "Instantiate Comparer object passing path to DOCX",
        "step_3": "Add DOCX files to comparison",
        "step_4": "Get report with distinctions info"
      },
      "code": {
        "comments": {
          "comment_1": "DOCX files alterations report",
          "comment_2": "Instantiate Comparer for document processing",
          "comment_3": "Add at least one file for comparison",
          "comment_4": "Analyze result"
        }
      }
    },
    "formats": {
      "title": "Comparison of DOCX by C# applications",
      "description": "{{ProdFullName}} advantages for control versions of popular files formats. Collect MS Word documents information quickly and easily."
    }
  },
  "png": {
    "head": {
      "title": "PNG images comparing by {{ProdFullName}} API",
      "description": "{{ProdFullName}} allows us to generate precise reports about distinctions at PNG images for applications based on C#, ASP.NET, VB.NET, or .NET Core"
    },
    "header": {
      "title": "Compare PNG images via C# .NET applications",
      "description": "{{ProdFullName}} API searches for any differences among PNG files quickly and easily. Improve C#, ASP.NET, VB.NET, and .NET Core applications in order to obtain comparison reports."
    },
    "about": {
      "title": "Uncover {{ProdFullName}} API features",
      "content": "{{ProdFullName}} API designed for comparing multiple PNG images and composing sophisticated reports about any distinctions at such images. It might be used at your .NET applications without installing any third-party software. Use {{ProdFullName}} APIs by adding a couple lines of code with many useful features out of the box."
    },
    "steps": {
      "title": "How to compare PNG pictures by {{ProgLang}}",
      "content": {
        "title": "Construct report describes differences in PNG pictures by [{{ProdShortName}}]({{ProductUrl}})",
        "step_1": "Download and install {{ProdFullName}} from [{{PackageStoreName}}]({{PackageUrl}})",
        "step_2": "Instantiate Comparer object providing path to PNG image",
        "step_3": "Involve other PNG files to be compared",
        "step_4": "Get final reports showing images alterations"
      },
      "code": {
        "comments": {
          "comment_1": "Construct report about changes in PNG images",
          "comment_2": "Create Comparer pointing to the first file",
          "comment_3": "Involve other pictures to comparison process",
          "comment_4": "Enjoy the resulting report"
        }
      }
    },
    "formats": {
      "title": "Compare PNG images by {{ProgLang}} and {{EnvName}}",
      "description": "{{EnvName}} API for PNG images comparison. Get information about any alterations in files without extra efforts."
    }
  },
  "jpeg": {
    "head": {
      "title": "{{ProdFullName}} API for JPEG images comparing",
      "description": "{{ProdFullName}} represents powerful API for collecting data about various distinctions inside JPEG images to be involved to C#, ASP.NET, VB.NET, or .NET Core applications."
    },
    "header": {
      "title": "Comparison of changes at JPEG images with {{EnvName}} technologies",
      "description": "Collecting and representing as a report data about changes in JPEG files provided by {{ProdFullName}} API quickly and easily. Business solutions based on C#, ASP.NET, VB.NET, and .NET Core could be empowered with our software to get useful data."
    },
    "about": {
      "title": "Investigate {{ProdFullName}} API features",
      "content": "{{ProdFullName}} API provides rich functionality in JPEG images comparison. Resulting reports contain data about any distinctions at selected images. Using of our software in your .NET projects do not request for any other libraries. Just add some lines of code and get powerful tool to achieve your goals."
    },
    "steps": {
      "title": "How to compare JPEG pictures by {{ProgLang}}",
      "content": {
        "title": "Control content of JPEG files with [{{ProdShortName}}]({{ProductUrl}})",
        "step_1": "Get {{ProdFullName}} from [{{PackageStoreName}}]({{PackageUrl}}) and add to your project",
        "step_2": "Use Comparer object constructor to set path to JPEG image",
        "step_3": "Involve other JPEG image to be analyzed",
        "step_4": "Investigate report saved to local disc"
      },
      "code": {
        "comments": {
          "comment_1": "Compose report about differences in JPEG images",
          "comment_2": "Pass main file path to Comparer constructor",
          "comment_3": "Provide paths to other JPEG pictures",
          "comment_4": "Save resulting report to file"
        }
      }
    },
    "formats": {
      "title": "Comparison for JPEG images with {{EnvName}}",
      "description": "Analyze information about any changes in JPEG files easily using {{ProdFullName}} product."
    }
  },
  "jpg": {
    "head": {
      "title": "{{ProdFullName}} API for Comparing JPG Images",
      "description": "The {{ProdFullName}} API allows for gathering data on distinctions within JPG images and integrating it into C#, ASP.NET, VB.NET, or .NET Core applications."
    },
    "header": {
      "title": "Comparing Changes in JPG Images with {{EnvName}} Technologies",
      "description": "Quickly and easily collect and report data on changes in JPG files using {{ProdFullName}} API. Enhance C#, ASP.NET, VB.NET, and .NET Core business solutions with our software to obtain valuable insights."
    },
    "about": {
      "title": "Exploring {{ProdFullName}} API features",
      "content": "The {{ProdFullName}} API offers extensive functionality for comparing JPG images, generating reports containing distinctions within selected images. Our software seamlessly integrates into .NET projects without requiring additional libraries, enabling you to achieve your objectives with minimal code."
    },
    "steps": {
      "title": "Comparing JPG Pictures using {{ProgLang}}",
      "content": {
        "title": "Manage JPG File Content with [{{ProdShortName}}]({{ProductUrl}})",
        "step_1": "Acquire {{ProdFullName}} from [{{PackageStoreName}}]({{PackageUrl}}) and integrate it into your project",
        "step_2": "Instantiate the Comparer object and specify the path to the JPG image",
        "step_3": "Include another JPG image for analysis",
        "step_4": "Review the report saved to the local disk"
      },
      "code": {
        "comments": {
          "comment_1": "Generate a report detailing differences in JPG images",
          "comment_2": "Provide the main file path to the Comparer constructor",
          "comment_3": "Specify paths to additional JPG images",
          "comment_4": "Save the resulting report to a file"
        }
      }
    },
    "formats": {
      "title": "JPG Image Comparison with {{EnvName}}",
      "description": "Easily analyze changes in JPG files using the {{ProdFullName}} solution."
    }
  }

}