{
  "common": {
    "head": {
      "title": "Effortlessly compare {{FileFormatUp}} documents using the Node.js PDF Comparison API with JavaScript.",
      "description": "{{ProdFullName}} offers an API to generate detailed document comparison reports for Node.js applications."
    },
    "header": {
      "title": "Comparing your {{FileFormatUp}} files in Node.js",
      "description": "Document comparison API based on Node.js provides opportunity to collect and display data about any distinctions in {{FileFormatUp}} files. Enhance the productivity of your solutions in file comparison tasks with {{ProdShortName}}.",
      "subtitle": "Solution for files comparing",
      "action_title": "Free {{PackageStoreName}} download"
    },
    "about": {
      "title": "Explore the features of {{ProdShortName}} API for Node.js",
      "content": "{{ProdFullName}} is an API that helps to compare pictures and documents in the same format. It can find differences in paragraphs, words, characters, shapes, and text styles between the compared documents. You can combine these changes and save them as a final document. It works well with PDFs, Word documents, Excel sheets, PowerPoint slides, Visio diagrams, Outlook emails, HTML, drawings, and various image typesâ€”all without needing extra tools."
    },
    "steps": {
      "title": "How to perform {{FileFormatUp}} files comparison using Node.js.",
      "content": {
        "title": "It is possible to use {{FileFormatUp}} files using [{{ProdShortName}}]({{ProductUrl}}) for getting report about differences in many {{FileFormatUp}} files",
        "step_1": "Install {{ProdFullName}} using [{{PackageStoreName}}]({{PackageUrl}})",
        "step_2": "Instantiate the Comparer and providing path to first of the files in the {{FileFormatUp}} format",
        "step_3": "Add another {{FileFormatUp}} file to Comparer",
        "step_4": "Obtain a clear report that precisely describes the differences"
      },
      "code": {
        "comments": {
          "comment_1": "Check multiple files to see how they are similar or different",
          "comment_2": "Create a Comparer object and give it the first file as input",
          "comment_3": "Append more files",
          "comment_4": "Fetch the final report"
        }
      }
    },
    "formats": {
      "title": "Compare popular document types via {{ProgLang}}",
      "description": "Our Node.js API enables you to compare documents in different formats. Keep track of document changes effortlessly by processing them using our tool."
    }
  },
  "pdf": {
    "head": {
      "title": "Use {{ProgLang}} with the Comparison Node.js API to compare PDF documents.",
      "description": "The {{ProdShortName}} Node.js API generates comprehensive reports detailing differences in PDF documents."
    },
    "header": {
      "title": "PDF documents comparison for Node.js via Java",
      "description": "Utilize our document comparison API in Node.js to detect and showcase differences in PDFs within JavaScript-powered applications. Benefit from swiftly and effortlessly obtaining detailed reports.",
      "subtitle": "Solution for comparing documents",
      "action_title": "Free download from {{PackageStoreName}}"
    },
    "about": {
      "title": "Explore {{ProdFullName}} API features",
      "content": "Get detailed reports about differences at documents of popular formats at your .NET applications. Use {{ProdFullName}} APIs by adding a couple lines of code. Developers can easily display {{FileFormatUp}}, Word Processing, Excel Spreadsheet, Presentation, Visio, Project, Outlook and many other popular document formats in HTML5, image or PDF modes. The document rendering is fast, identical to the original source file, and it does not require installing additional software or any other external libraries."
    },
    "steps": {
      "title": "Getting report about PDFs distinctions in JavaScript",
      "content": {
        "title": "Track PDF documents changes by reports composed with [{{ProdShortName}}]({{ProductUrl}})",
        "step_1": "Use [{{PackageStoreName}}]({{PackageUrl}}) to install {{ProdShortName}} for Node.js via Java",
        "step_2": "Call Comparer constructor with PDF file path",
        "step_3": "Provide another PDF to compare it to first one",
        "step_4": "Retrieve a final report about files differences"
      },
      "code": {
        "comments": {
          "comment_1": "Getting report about changes in PDF files",
          "comment_2": "Construct Comparer instance with a first file",
          "comment_3": "Add other file or files",
          "comment_4": "Save report to specified path"
        }
      }
    },
    "formats": {
      "title": "Compare popular file formats like PDF using JavaScript",
      "description": "Your PDF files could be compared by our Node.js API quickly. Control document changes effortlessly with detailed reports."
    }
  }
}